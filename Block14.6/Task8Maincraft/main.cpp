#include <iostream>
#include <vector>

const int SIZE = 3;

void display (std::vector <bool> vec [SIZE])
{

    for (int i = 0; i < SIZE; i++)
    {
        for (int j = 0; j < vec[i].size(); j++)
        {
            std::cout << vec[i][j] << " ";
        }

        std::cout << std::endl;
    }

}


//todo сделать срез для двумерного массива

int main()
{
    /*
    const int maxHight = 10;
    std::vector <int> sector [5][5];
    int hights [5][5];

    for (int i = 0; i < 5; i++)
    {
        for (int j = 0; j < 5; j++)
        {
            std::cout << "Enter hight " << i + j + 5 + 1 << "pillar\=>";
            std::cin >> hights [i][j];
            sector [i]->push_back(j);
        }
    }
*/

    const int maxHight = 10;
    std::vector <bool> sector [SIZE];
    int hight = 0;

    for (int i = 0; i < 3; i++)
    {

            std::cout << "Enter hight " << i + 1 << " pillar\n=>";
            std::cin >> hight;
        for (int j = 0; j < hight; j++)
            sector[i].push_back(true);
    }


display (sector);




    return 0;
}

/*
Задача 8. Почти-Майнкрафт

Нам всё-таки предстоит сделать некое подобие Майнкрафта. Миллионов не обещаю, но это довольно интересная задача на пространственное мышление.
У нас есть небольшой квадратный ландшафт, размером 5х5 секторов. В каждом секторе располагается блок (столбик) ландшафта,
максимальная высота которого — это 10 блоков. Текущая высота каждого такого блока задаётся пользователем вначале программы.
Итоговая задача — используя трёхмерный массив вывести в стандартный вывод горизонтальное сечение (или горизонтальный срез) нашего небольшого мира.
Сам мир как раз должен быть представлен в виде трёхмерного массива. Его горизонтальный срез стало быть — это двумерный массив,
который надо отобразить в виде единиц и нулей. 0 — это отсутствие элемента на данном уровне в данной точке, 1 — элемент есть.
Уровень среза от 0 до 9 включительно — также задаётся в стандартном вводе.

*/